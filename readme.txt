Device Framework
================

0.3.x Device I/O结构
--------------------

 +-------------------------------------------------------+ 
 | Device Interface:                                     | 
 |  init/open/close/read/write/control                   | 
 |  tx_completed/rx_indicate                             | 
 +-------.--------_--------------------------------------+ 
         `         \                                       
        |           \                                      
        `            \                                     
  +----/-------+ +----'--------+                           
  | STM32      | | STM32       |                           
  | UART Device| | SPI Block   |                           
  +-----,------+ +------/------+                           
       /                |                                  
       `                 \                                 
      /                  |                                 
 +---/-------------------\-------------------------------+ 
 | Hardware                                              | 
 |   +--------+   +-----------+                          | 
 |   | UART   |   | SPI Flash |                          | 
 |   +--------+   +-----------+                          | 
 |   +--------+                                          | 
 |   | Touch  |                                          | 
 |   +--------+                                          | 
 +-------------------------------------------------------+ 

Device I/O部分更类似一个接口的功能，虽然每个设备驱动都能够
从rt_device派生成一个新的对象，但是必须包含足够的init/open/
close/read/write/control等接口信息。
冗余信息比较多，且并不是每个设备对象都可以抽象成类似read/
write的接口。

新的设备驱动
------------
0.4.x(暂定这个版本)，Device I/O接口则对其中进行调整，使得对
象化更好，并按照目前常见的设备统一提供一些通常意义的类实现，
这样当用户需要进行编写新的设备驱动时，能够仅提供少数的信息
即可完成一个驱动。

常见的设备分类：
字符型设备
块设备
touch设备
sound设备
lcd设备
总线型设备：
    spi类型设备
    usb bus类型设备
